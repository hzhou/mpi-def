include: c/mpi.def

page: test, mpi_frame
    module: c
    exe: mpirun -l -np 2 basic/test

    $print Hello world from $mpi_id/$mpi_size
    $call isend_test

subcode: send_test
    &call p2p_region, 0, 1
        $call send_null
        # $call send_int
        # $call send_back_large

    subcode: send_null
        $call send_to, NULL, 0, MPI_DATATYPE_NULL
        $(if:!is_p1)
            $print Node $(p2): received.
        $(else)
            $print Node $(p1): send done.

    subcode: send_int
        $local tn_data

        $(if:is_p1)
            tn_data = 1234
        $call send_to, &tn_data, 1, MPI_INT
        $(if:!is_p1)
            $print Node $(p2): received data from node $(p1): $tn_data
        $(else)
            $print Node $(p1): send done.


    subcode: send_back_large
        $(set:SIZE=100*1024)
        $local pn_buf
        $local_allocate($(SIZE)) pn_buf
        $(if:!is_p1)
            # tn_data = 4321
            $for i=0:$(SIZE)
                pn_buf[i] = i
        $call send_back, pn_buf, $(SIZE), MPI_INT
        $(if:is_p1)
            $print Node $(p1): received data from node $(p2): ${pn_buf[1234]}

subcode: isend_test
    $local req, status
    $(set:req=req)
    &call p2p_region, 0, 1
        $call isend_to, NULL, 0, MPI_DATATYPE_NULL
        MPI_Wait(&req, &status)
        $(if:!is_p1)
            assert(status.MPI_TAG == $(tag))
            $print Node $(p2): received.
        $(else)
            $print Node $(p1): send done.


