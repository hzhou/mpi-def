#---- app: distribute --------------------------- 
subcode: mpi_distribute(N)
    $(setmacro:mpi_distribute=1)
    $global n_mpi_N
    $global pn_mpi_offs = NULL, pn_mpi_size = NULL
    $if pn_mpi_offs == NULL
        $allocate(mpi_size+1) pn_mpi_offs, pn_mpi_size
    n_mpi_N = $(N)
    tn_per = $(N)/mpi_size
    tn_remain = $(N) % mpi_size
    j = 0
    $for i=0:mpi_size
        pn_mpi_offs[i] = j
        $if i<tn_remain
            pn_mpi_size[i] = tn_per + 1
        $else
            pn_mpi_size[i] = tn_per
        j+=pn_mpi_size[i]
    pn_mpi_offs[mpi_size] = $(N)

subcode:: on_mpi_finalize
    $(if:mpi_distribute)
        $if pn_mpi_offs
            free(pn_mpi_offs)
            free(pn_mpi_size)


#---------------------------------------- 
subcode: mpi_scatter(global, local, type)
    MPI_Scatterv($(global), pn_mpi_size, pn_mpi_offs, $(type), $(local), pn_mpi_size[$(rank)], $(type), 0, $(comm))

subcode: mpi_gather(global, local, type)
    MPI_Gatherv($(local), pn_mpi_size[$(rank)], $(type), $(global), pn_mpi_size, pn_mpi_offs, $(type), 0, $(comm))

