include: c/mpi.def

# run: osu_latency
page: test_latency, mpi_frame
    module: c
    exe: mpirun -np 2 out/test_latency

    $(set:SIZE=8)
    $allocate($(SIZE)) s_buf
    $call get_latency, $(SIZE), 100000

page: osu_latency, mpi_frame
    module: c
    exe: mpirun -np 2 out/osu_latency
    # $(set:MAX=5000000)
    $(set:MAX=100)
    $allocate($(MAX)) s_buf
    $for int size=1; size<$(MAX); size*=2
        $if size < 8192
            tn_iter = 50000
        $else
            tn_iter = 1000
        $call get_latency, size, tn_iter

subcode: get_latency(size, iters)
    $local tn_data

    $local t_start, t_end: double

    $(mset:tag1=100, tag2=101)

    &call p2p_region, 0, 1
        $(for:try in 0, 1)
            t_start = get_wtime()
            $for i=0:$(iters)
                $call send_to, s_buf, $(size), MPI_CHAR
                $call send_back, s_buf, $(size), MPI_CHAR
            t_end = get_wtime()

            $(if:try=1 and is_p1)
                $my double tf_diff = t_end - t_start
                $if tf_diff < 0 
                    tf_diff += 16
                $print "  %10d - %f\n", $(size), tf_diff*1e6/(2.0*$(iters))

fncode: get_wtime: double
    $include time
    $uselib POSIX
    $local struct timespec t
    clock_gettime(CLOCK_MONOTONIC, &t)
    return (double)(t.tv_sec & 0xf) + (double)t.tv_nsec *1e-9
